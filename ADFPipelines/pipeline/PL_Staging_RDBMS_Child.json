{
	"name": "PL_Staging_RDBMS_Child",
	"properties": {
		"activities": [
			{
				"name": "Set Copy Type",
				"description": "Set Variable activity to set V_CopyType based on Set CopyType_Init activity output",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set CopyType_Init",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "V_CopyType",
					"value": {
						"value": "@trim(string(variables('V_CopyType_Init')))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Get Max Date In Source",
				"description": "Script acivity to get the max date value from Source",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Set Copy Type",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Update LastRefreshStatus To InProgress",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "SqlServer1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@{\n    if(  not(equals(pipeline().parameters.P_Entity.IncRefreshColumn,''))\n        ,concat('SELECT MAX(',pipeline().parameters.P_Entity.IncRefreshColumn,') AS MaxDate FROM [',pipeline().parameters.P_Entity.SrcTableSchema,'].[',pipeline().parameters.P_Entity.SrcTableName,']')\n        ,'SELECT NULL AS MaxDate'\n    )\n}\n\n;\nSelect count(*) as cnt from @{pipeline().parameters.P_Entity.SrcTableSchema}.@{pipeline().parameters.P_Entity.SrcTableName}\n\n;\n",
								"type": "Expression"
							}
						}
					]
				}
			},
			{
				"name": "Update ControlTable details",
				"description": "Script activity to set LastRefreshDate, IncRefreshMaxDate and LastRefreshStatus values in RDBMSControlTable ",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "CP_OnPrem_To_MISQL",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlMI1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "NonQuery",
							"text": {
								"value": "UPDATE [config].[RDBMSControlTable]\nSET LastRefreshDate= GETDATE()\n,LastRefreshStatus='Merge is Pending'\n,IncRefreshMaxDate = '@{activity('Get Max Date In Source').output.resultSets[0].rows[0].MaxDate}'\nWHERE ControlID = @{pipeline().parameters.P_Entity.ControlID}\n\nDelete from [Config].[TempRDBMSControlTable] WHERE ControlID = @{pipeline().parameters.P_Entity.ControlID} and SrcConnectionType = '@{pipeline().parameters.P_Entity.SrcConnectionType}'\n\n;\n\n\n;\nDelete from Config.RowCountValidation where BusinessArea = '@{pipeline().parameters.P_Entity.BusinessArea}' and SrcTableName =  '@{pipeline().parameters.P_Entity.SrcTableSchema}'+'_'+'@{pipeline().parameters.P_Entity.SrcTableName}'\n;\nInsert into Config.RowCountValidation(BusinessArea,SrcTableName,SrCRowCount,TgtTableName,CreatedDate)\nSelect '@{pipeline().parameters.P_Entity.BusinessArea}','@{pipeline().parameters.P_Entity.SrcTableSchema}'+'_'+'@{pipeline().parameters.P_Entity.SrcTableName}',@{activity('Get Max Date In Source').output.resultSets[1].rows[0].cnt},'raw'+'_'+'@{pipeline().parameters.P_Entity.TgtTableName}',Getdate()",
								"type": "Expression"
							}
						}
					]
				}
			},
			{
				"name": "Update LastRefreshStatus To InProgress",
				"description": "Script activity to set LastRefreshStatus value in RDBMSControlTable",
				"type": "Script",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlMI1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "NonQuery",
							"text": {
								"value": "UPDATE [config].[RDBMSControlTable]\nSET LastRefreshStatus='InProgress'\nWHERE ControlID = @{pipeline().parameters.P_Entity.ControlID}\n",
								"type": "Expression"
							}
						}
					]
				}
			},
			{
				"name": "CP_OnPrem_To_MISQL",
				"description": "Copy activity to copy tables from Onprem to Azure SQL MI",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Get Max Date In Source",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "@{if(\n     equals(variables('V_CopyType'),'inc')\n     ,if(\n          equals(pipeline().parameters.P_Entity.Query,'')\n          ,replace(pipeline().parameters.P_Entity.CreatedQuery,'_lmdcclause_',concat(pipeline().parameters.P_Entity.IncRefreshColumn,' >= ''',pipeline().parameters.P_Entity.IncRefreshMaxDate,'''',' AND ',pipeline().parameters.P_Entity.IncRefreshColumn,' <= ','''',activity('Get Max Date In Source').output.resultSets[0].rows[0].MaxDate,''''))\n          ,replace(pipeline().parameters.P_Entity.Query,'_lmdcclause_',concat(pipeline().parameters.P_Entity.IncRefreshColumn,' >= ''',pipeline().parameters.P_Entity.IncRefreshMaxDate,'''',' AND ',pipeline().parameters.P_Entity.IncRefreshColumn,' <= ','''',activity('Get Max Date In Source').output.resultSets[0].rows[0].MaxDate,''''))\n     )\n     ,if(\n          equals(pipeline().parameters.P_Entity.Query,'')\n          ,replace(pipeline().parameters.P_Entity.CreatedQuery,'_lmdcclause_',' 1=1 ')\n          ,replace(pipeline().parameters.P_Entity.Query,'_lmdcclause_',' 1=1 ')\n     )\n)\n}",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "SqlMISink",
						"preCopyScript": {
							"value": "if exists (Select 1 from sys.tables where name = '@{pipeline().parameters.P_Entity.TgtTableName}'  and  Schema_name(SChema_ID) = 'tmpstg' )\nTruncate table tmpstg.@{pipeline().parameters.P_Entity.TgtTableName}\n",
							"type": "Expression"
						},
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_OnPremSQL",
						"type": "DatasetReference",
						"parameters": {
							"ServerName": {
								"value": "@json(pipeline().parameters.P_Entity.SrcConnectionParam).ServerName",
								"type": "Expression"
							},
							"DataBaseName": {
								"value": "@json(pipeline().parameters.P_Entity.SrcConnectionParam).DatabaseName",
								"type": "Expression"
							},
							"UserName": {
								"value": "@json(pipeline().parameters.P_Entity.SrcConnectionParam).UserName",
								"type": "Expression"
							},
							"AKVSKVSecretName": {
								"value": "@json(pipeline().parameters.P_Entity.SrcConnectionParam).AKVSecretName",
								"type": "Expression"
							},
							"SchemaName": {
								"value": "@pipeline().parameters.P_Entity.SrcTableSchema",
								"type": "Expression"
							},
							"TableName": {
								"value": "@pipeline().parameters.P_Entity.SrcTableName",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DS_AzureSqlMI",
						"type": "DatasetReference",
						"parameters": {
							"SchemaName": "tmpstg",
							"TableName": {
								"value": "@pipeline().parameters.P_Entity.TgtTableName",
								"type": "Expression"
							},
							"Servername": {
								"value": "@json(pipeline().parameters.P_Entity.TgtConnectionParam).ServerName",
								"type": "Expression"
							},
							"DatabaseName": {
								"value": "@json(pipeline().parameters.P_Entity.TgtConnectionParam).DatabaseName",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Set CopyType_Init",
				"description": "Set Variable activity to set V_CopyType_Init to 'inc' or 'ftl' based on P_load_type parameter, PrimaryKeyList and IncRefreshColumn values",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "V_CopyType_Init",
					"value": {
						"value": "@{if(\n    and(\n        and(\n             not(equals(pipeline().parameters.P_Entity.IncRefreshColumn,''))\n            ,not(equals(pipeline().parameters.P_Entity.PrimaryKeyList,''))\n        )\n    ,equals(toLower(pipeline().parameters.P_load_type),'inc')\n    )\n    ,'inc'\n    ,string('ftl')\n    )\n    \n    }\n\n",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"P_Entity": {
				"type": "object"
			},
			"P_load_type": {
				"type": "string"
			}
		},
		"variables": {
			"V_CopyType": {
				"type": "String"
			},
			"V_Runtime": {
				"type": "Array"
			},
			"V_CopyType_Init": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Staging/RDBMS"
		},
		"annotations": [],
		"lastPublishTime": "2024-04-10T12:09:21Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}